import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import React, { useState, useEffect } from "react";
import axios from "axios";
import BeerItem from "../components/BeerItem";

export default function Home() {
  const [beerList, setBeerList] = useState([]);
  const [radioBtn, setRadioBtn] = useState("featured");

  const isChecked = (value) => value === radioBtn;

  // const getBeer = (e) => {
  //   e.preventDefault();
  //   axios
  //     .get(beerAPI)
  //     .then(result => setBeerList(result.data))
  //     .catch(error => console.log(error));
  // };

  useEffect(() => {
    const beerAPI = "https://api.punkapi.com/v2/beers";
    axios
      .get(beerAPI)
      .then(result => setBeerList(result.data))
      .catch(error => console.log(error));
  }, []);

  const beerAPI = "https://api.punkapi.com/v2/beers";

  const sortFeatured = ({target: { value }}) => {
    axios
      .get(beerAPI)
      .then(result => setBeerList(result.data))
      .catch(error => console.log(error));
    setRadioBtn(value);
  };
  const sortName = ({target: { value }}) => {
    axios
      .get(beerAPI)
      .then(result => {
        const nameSort = result.data.sort((a, b) =>
          a.name.localeCompare(b.name)
        );
        setBeerList(nameSort);
      })
      .catch(error => console.log(error));
      setRadioBtn(value);
  };
  const sortABV = ({target: { value }}) => {
    axios
      .get(beerAPI)
      .then(result => {
        const abvSort = result.data.sort((a, b) => a.abv - b.abv);
        setBeerList(abvSort);
      })
      .catch(error => console.log(error));
      setRadioBtn(value);
  };
  const sortDate = ({target: { value }}) => {
    axios
      .get(beerAPI)
      .then(result => {
        const dateSort = result.data.sort((a, b) =>
          a.first_brewed.localeCompare(b.first_brewed)
        );
        // const split = dateSort.map((splitDate) => (
        //   splitDate.first_brewed.split("/")
        // ))
        // console.log("split date", split)
        // const yearSort = split.sort((a, b) =>
        //   a[1].localeCompare(b[1]))
        // console.log("year sorted", yearSort);
        // const final = dateSort.sort(yearSort);
        // console.log("final", final)
        setBeerList(dateSort);
      })
      .catch(error => console.log(error));
      setRadioBtn(value);
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Golden Bro Beers</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className={styles.bg}></div>
      <div className={styles.bg + " " + styles.bg2}></div>
      <div className={styles.bg + " " + styles.bg3}></div>

      <div className={styles.title}>
        <h1>Golden Bro Beers</h1>
      </div>

      <div className={styles.formSort}>
        <form>
          <div className={styles.inSort}>
            <h4>Filter By: </h4>
            <input
              type="radio"
              name="filter"
              id="featured"
              value="featured"
              onChange={sortFeatured}
              checked={isChecked("featured")}
            />
            <label htmlFor="featured">Featured</label>
            <input
              type="radio"
              name="filter"
              id="name"
              value="name"
              onChange={sortName}
              checked={isChecked("name")}
            />
            <label htmlFor="name">Name</label>
            <input
              type="radio"
              name="filter"
              id="abv"
              value="abv"
              onChange={sortABV}
              checked={isChecked("abv")}
            />
            <label htmlFor="abv">ABV</label>
            <input
              type="radio"
              name="filter"
              id="latest"
              value="latest"
              onChange={sortDate}
              checked={isChecked("latest")}
            />
            <label htmlFor="latest">Newest</label>
          </div>
        </form>
      </div>

      <div className={styles.listAction}>
        {beerList.length >= 1 &&
          beerList.map(beer => <BeerItem key={beer.id} {...beer} />)}
      </div>
    </div>
  );
}
